spring:
  config:
    import: "classpath:.env.properties"
  application:
    name: Salty

  datasource:
    url: jdbc:h2:file:~/testdb1234567
    driver-class-name: org.h2.Driver
    username: sa
    password: ''

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false

  h2:
    console:
      enabled: true
      path: /h2-console

    ##MySQL ?? (???? ??, ??? ??? ? ?? /local)
  #  datasource:
  #    driver-class-name: com.mysql.cj.jdbc.Driver
  #    url: jdbc:mysql://localhost:3306/test_db
  #    username: test
  #    password: 1234

  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.H2Dialect

  sql:
    init:
      platform: h2
      mode: always

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  mail:
    host: smtp.gmail.com
    port: 587
    username: khsso102649@gmail.com
    password: yjuikbjezgbyosyw
    properties:
      mail:
        smtp:
          auth: true
          required: true
        connection timeout: 5000
        timeout: 5000
        write timeout: 5000

  data:
    redis:
      host: localhost
      port: 6379

#  security:
#    oauth2:
#      client:
#        registration:
#          kakao:
#            client-id: ${KAKAO_CLIENT_ID}
#            client-secret: ${KAKAO_CLIENT_SECRET}
#            redirect-uri: http://localhost:8080/api/auth/kakao/callback
#            authorization-grant-type: authorization_code
#            client-authentication-method: client_secret_post
#            client-name: Kakao
#
#        provider:
#          # Kakao Provider 설정 (Google과 Github는 기본 제공됨)
#          kakao:
#            authorization-uri: https://kauth.kakao.com/oauth/authorize
#            token-uri: https://kauth.kakao.com/oauth/token
#            user-info-uri: https://kapi.kakao.com/v2/user/me
#            user-name-attribute: id

kakao:
  client_id: ${KAKAO_CLIENT_ID}
  secret_key: ${KAKAO_CLIENT_SECRET}
  redirect_uri: ${KAKAO_REDIRECT_URI}
  admin_key: ${KAKAO_ADMIN_KEY}

jwt:
  secret: ${JWT_SECRET_KEY}
  access-token:
    expiration: 3600000
  refresh-token:
    expiration: 604800000

logging:
  level:
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql: TRACE
    com.app.salty.checklist: DEBUG
    org.springframework.web: DEBUG

server:
  port: 8080